---

- name: Update IPv4 CIDR and IPv6 prefix to random ranges
  command: "/usr/bin/vpn-server-api-update-ip --profile internet --host {{ \
  ansible_fqdn }}"
  args:
    creates: "config/config.php"

- name: Initialize CA
  command: "/usr/bin/vpn-server-api-init"
  become_user: www-data
  args:
    creates: "{{ serverapibasedir }}/data/db.sqlite"

- name: Regenerate OpenVPN config
  command: "/usr/bin/vpn-server-node-server-config"
  notify: openvpn

- name: Generate/install firewall rules
  command: "/usr/bin/vpn-server-node-generate-firewall --install"
  notify: firewall

- name: Check if user db exists.
  stat:
      path: "{{ portalbasedir }}/data/db.sqlite"
  register: userdb

- name: Copy initial user db schema DDL
  copy:
      src: "resources/schema.sql"
      dest: "{{ portalbasedir }}/schema/{{ sqlite_schema_version }}.schema"

- name: Generate initial version data
  template:
      src: "templates/init.sql.j2"
      dest: "/tmp/version.sql"

- name: Create initial user db
  shell: >-
      sqlite3 {{ portalbasedir }}/data/db.sqlite -init {{ portalbasedir }}/schema/*.schema
  when: userdb.stat.exists == False
  become_user: "www-data"

- name: Set version data for user db
  shell: >-
      sqlite3 {{ portalbasedir }}/data/db.sqlite < /tmp/version.sql
  when: userdb.stat.exists == False
  become_user: "www-data"

- name: Add users
  import_tasks: users.yml
  when: deployment == True
